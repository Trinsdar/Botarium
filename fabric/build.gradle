architectury {
    platformSetupLoomIde()
}

classExtensions {
    registerForSourceSet sourceSets.main, "earth.terrarium.botarium.fabric.extensions"
}

sourceSets.main {
    def commonSourceSets = project(":common").sourceSets

    def commonMain = commonSourceSets.main

    java.srcDirs(
            commonMain.java.srcDirs
    )

    resources.srcDirs(
            commonMain.resources.srcDirs
    )
}

jar {
    classifier "dev"
    archivesBaseName = "$mod_id-fabric-$minecraft_version"
}

sourceSets.test {
    def commonSourceSets = project(":common").sourceSets
    def commonTest = commonSourceSets.test

    java.srcDirs(
            commonTest.java.srcDirs
    )

    resources.srcDirs(
            commonTest.resources.srcDirs
    )
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    include modApi('teamreborn:energy:2.2.0') {
        exclude(group: "net.fabricmc.fabric-api")
    }
    compileOnly(project(path: ":common")) { transitive false }
    testCompileOnly(project(path: ":common", configuration: "testApiElements")) { transitive false }
    modRuntimeOnly 'RebornCore:RebornCore-1.19:5.5.0'
    modRuntimeOnly 'TechReborn:TechReborn-1.19:5.5.0'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def ENV = System.getenv()

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifactId = rootProject.mod_id + "-" + project.name + "-" + project.minecraft_version
            pom {
                name = 'Botarium'
                description = 'Tiny lil library mod for cross platform energy and registries'
                url = 'https://github.com/terrarium-earth/Spirit'

                scm {
                    connection = 'git:https://github.com/CodexAdrian/Botarium.git'
                    developerConnection = 'git:https://github.com/CodexAdrian/Botarium.git'
                    url = 'https://github.com/CodexAdrian/Botarium'
                }

                licenses {
                    license {
                        name = 'MIT'
                    }
                }
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            url = "https://repo.repsy.io/mvn/trinsdar/gregtech-intergalactical/"
            credentials {
                username ENV.MAVEN_USERNAME
                password ENV.MAVEN_PASSWORD
            }
        }
    }
}